@using Splitwiser.Models
@using Splitwiser.Models.UserEntity
@model Tuple<Guid, UserEntity, List<UserViewModel>>

<style>
    /* Custom CSS to center the table */
    .center-table {
        display: flex;
        justify-content: center;
        align-items: center;
        /* height: 100vh; /* 100% of the viewport height */ */
    }
</style>

<div class="text-center">
    <h1>Zarządzaj członkami Grupy</h1>
    <br/>

    <br />
    <section id="cards" class="bg-faded py-2">
        <div class="col-xl-6 col-lg-4 mb-4 container center-table">
            <div class="card border-primary h-100 container center-table">
                <div class="card-body">
                    <h4>Członkowie grupy</h4>
                    <table class="table table-hover table-sm">
                        <thead>
                            <tr>
                                <th class="w-50">Nazwa</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in Model.Item3)
                            {
                                <tr>
                                    <td>@user.UserName</td>
                                    <td>
                                        @if (Model.Item3.Count() > 1)
                                        {
                                        <button class="btn btn-danger mr-1 mb-1" onclick="window.location.href='@Url.Action("deleteMember","group", new {Id = user.UserId, groupId = Model.Item1})'">Usuń</button>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </section>

    @{
        var searchUser = new UserViewModel();
    }

    <br />
    <div class="col-xl-6 col-lg-4 mb-4 container center-table">
        <div class="card border-primary h-100 container center-table">
            <div class="card-body">
                <h4>Dodaj użytkownika</h4>
                @* By działało przesyłanie po poprzednim api musi być identyczne jakto z którego zostąło otrzymane *@
                @using (Html.BeginForm("addMember", "group", FormMethod.Post))
                {
                    <br />
                    <h4>Szukaj po nazwie</h4> @Html.TextBoxFor(x => searchUser.UserName)
                    <button class="btn btn-primary mr-1" type="submit">Dodaj</button>
                    <br />
                    @Html.ValidationSummary()
                }
            </div>
        </div>
    </div>

    <a href="/group/@Model.Item1">
        <button class="btn btn-outline-primary">Powrót</button>
    </a>
</div>


