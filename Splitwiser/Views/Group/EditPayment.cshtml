@using Splitwiser.Models
@using Splitwiser.Models.GroupPaymentHistory
@using Splitwiser.Models.UserGroup
@model Tuple<Guid, List<UserViewModelCheckbox>, bool, GroupPaymentHistoryEntity>

<style>
    .center-table {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 50vh
    }
</style>

<div class="text-center">

    <h1>Group</h1>
    <br />
    <br />

    @{
        // Initialize the model
        var payment = Model.Item4;
        List<UserViewModelCheckbox> userListCheckbox = Model.Item2;
    }

    @using (Html.BeginForm("editPayment", "group", FormMethod.Post))
    {
        <p>Tytuł</p> @Html.TextBoxFor(x => payment.TransactionName)
        <p>@Html.ValidationMessageFor(model => payment.TransactionName, "", new { @class = "text-danger" }) </p>
        <p>Kwota</p> @Html.TextBoxFor(x => payment.Amount)
        <p>@Html.ValidationMessageFor(model => payment.Amount, "", new { @class = "text-danger" }) </p>
	    <br />
        @Html.HiddenFor(model => payment.Id)
        @Html.HiddenFor(model => payment.GroupId)
        @Html.HiddenFor(model => payment.UserId)
        @Html.HiddenFor(model => payment.AddDate)

        <br/>
        <h4>Wybierz osoby które chcesz obciążyć</h4>

            <section id="cards" class="bg-faded py-2">
                <div class="col-xl-6 col-lg-4 mb-4 container center-table">
                <div class="card bg-primary border-primary h-100 container center-table">
                        <div class="card-body">

                            @for (int i = 0; i < userListCheckbox.Count; i++)
                            {
                                <div>
                                    @Html.HiddenFor(model => userListCheckbox[i].UserId)

                                @if (userListCheckbox[i].wasPaid)
                                {
                                    @Html.CheckBoxFor(model => userListCheckbox[i].IsChecked, new { @disabled = "disabled" })
                                }else
                                {
                                    @Html.CheckBoxFor(model => userListCheckbox[i].IsChecked)
                                }
                                @* @Html.CheckBoxFor(model => userListCheckbox[i].IsChecked) *@

                    @*                 @{
                                        var disabledAttribute = userListCheckbox[i].wasPaid ? "disabled" : "enabled";
                                    }

                                    @Html.CheckBoxFor(model => userListCheckbox[i].IsChecked, new { @disabled = false }) *@
                                    @userListCheckbox[i].UserName
                                </div>
                            }

                        </div>
                    </div>
                </div>
            </section>

        <button class="btn btn-primary mr-1" type="submit">Dodaj</button>
    }

    @if (!Model.Item3)
    {
        <br/>
        <h5 style="color: red;">Musisz zaznaczyć przynajmniej jednego użytkownika</h5>
    }

<div/>

<br/>
<a href="/group/@Model.Item1">
        <button class="btn btn-outline-primary">Powrót</button>
</a>